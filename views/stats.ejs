<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Employee Attendance Dashboard</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <style>
      body {
        background-color: #f8f9fa;
      }
      .dashboard-card {
        border-radius: 1rem;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
      }
      .chart-container {
        position: relative;
        height: 300px;
      }
      .employee-list {
        max-height: 200px;
        overflow-y: auto;
      }
    </style>
  </head>
  <body>
    <div class="container py-5">
      <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Attendance Dashboard</h1>
      </div>

      <div class="row text-center mb-4">
        <div class="col-md-4">
          <div class="p-4 bg-success text-white dashboard-card">
            <h2 id="presentCount">0</h2>
            <p>Present Today</p>
          </div>
        </div>
        <div class="col-md-4">
          <div class="p-4 bg-danger text-white dashboard-card">
            <h2 id="absentCount">0</h2>
            <p>Absent Today</p>
          </div>
        </div>
        <div class="col-md-4">
          <div class="p-4 bg-info text-white dashboard-card">
            <h2 id="totalCount">0</h2>
            <p>Total Employees</p>
          </div>
        </div>
        <div class="col-md-12 mt-3">
          <div class="p-3 bg-warning text-dark dashboard-card text-center">
            <h4>
              Total Wage (Present Employees): <span id="totalWage">0</span> AED
            </h4>
          </div>
        </div>
      </div>

      <!-- Workplace Summary -->
      <div class="dashboard-card p-3 mb-4">
        <h5 class="text-center">Workplace Summary</h5>
        <table
          class="table table-bordered table-hover text-center"
          id="workplaceSummaryTable"
        >
          <thead class="table-light">
            <tr>
              <th>Workplace</th>
              <th>Present Count</th>
              <th>Total Wage (AED)</th>
              <th>Overtime Employees</th>
            </tr>
          </thead>
          <tbody></tbody>
        </table>
      </div>

      <!-- Modal for Employees -->
      <div
        class="modal fade"
        id="employeeModal"
        tabindex="-1"
        aria-hidden="true"
      >
        <div class="modal-dialog modal-lg">
          <div class="modal-content">
            <div class="modal-header">
              
              <h5 class="modal-title" id="employeeModalLabel">Employees</h5>
              <button
                type="button"
                class="btn-close"
                data-bs-dismiss="modal"
              ></button>
            </div>
            <div class="modal-body">
              <ul class="list-group" id="employeeDetailList"></ul>
              <div class="mt-3 text-end text-muted">
                Total Overtime Employees: <span id="overtimeCount">0</span></div><button class="btn btn-sm btn-outline-primary" onclick="downloadPDF()">Download PDF</button></div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Charts & Lists -->
      <div class="row">
        <div class="col-md-6">
          <div class="dashboard-card p-3 mb-4">
            <h5 class="text-center">Attendance Breakdown</h5>
            <div class="chart-container">
              <canvas id="attendancePie"></canvas>
            </div>
          </div>
          <div class="dashboard-card p-3">
            <h5 class="text-center">Present Employees</h5>
            <ul id="presentList" class="list-group employee-list"></ul>
          </div>
        </div>

        <div class="col-md-6">
          <div class="dashboard-card p-3 mb-4">
            <h5 class="text-center">Past Week Overview</h5>
            <div class="chart-container">
              <canvas id="weeklyChart"></canvas>
            </div>
          </div>
          <div class="dashboard-card p-3">
            <h5 class="text-center">Absent Employees</h5>
            <ul id="absentList" class="list-group employee-list"></ul>
          </div>
        </div>
      </div>
    </div>

    <script>
      const pieCtx = document.getElementById("attendancePie").getContext("2d");
      const weeklyCtx = document.getElementById("weeklyChart").getContext("2d");

      let pieChart, weeklyChart;

      async function fetchData() {
        try {
          const res = await axios.get(`/stats/today`);
          const weekRes = await axios.get(`/stats/weekly`);

          const { present, absent, total, presentEmployees, absentEmployees } =
            res.data;
          document.getElementById("presentCount").innerText = present;
          document.getElementById("absentCount").innerText = absent;
          document.getElementById("totalCount").innerText = total;

          updatePieChart(present, absent);
          updateWeeklyChart(weekRes.data);
          renderEmployeeList("presentList", presentEmployees);
          renderEmployeeList("absentList", absentEmployees);
          renderWorkplaceSummary(presentEmployees);
        } catch (err) {
          console.error("Error fetching data:", err);
        }
      }

      function updatePieChart(present, absent) {
        const data = {
          labels: ["Present", "Absent"],
          datasets: [
            {
              data: [present, absent],
              backgroundColor: ["#198754", "#dc3545"],
            },
          ],
        };
        if (pieChart) pieChart.destroy();
        pieChart = new Chart(pieCtx, {
          type: "pie",
          data: data,
        });
      }

      function updateWeeklyChart(weekData) {
        const data = {
          labels: weekData.map((d) => d.date),
          datasets: [
            {
              label: "Present",
              data: weekData.map((d) => d.present),
              backgroundColor: "#0d6efd",
            },
            {
              label: "Absent",
              data: weekData.map((d) => d.absent),
              backgroundColor: "#ffc107",
            },
          ],
        };
        if (weeklyChart) weeklyChart.destroy();
        weeklyChart = new Chart(weeklyCtx, {
          type: "bar",
          data: data,
          options: {
            responsive: true,
            scales: {
              y: { beginAtZero: true },
            },
          },
        });
      }

      function renderEmployeeList(listId, employees) {
        const list = document.getElementById(listId);
        list.innerHTML = "";
        if (employees.length === 0) {
          const li = document.createElement("li");
          li.className = "list-group-item text-muted";
          li.innerText = "No data";
          list.appendChild(li);
          return;
        }
        employees.forEach((emp) => {
          const li = document.createElement("li");
          li.className = "list-group-item";
          let content = `<strong>${emp.name}</strong> (ID: ${emp.employee_id})`;
          if (emp.wage && emp.workplace_name) {
            content += `<br><small>Wage: ${emp.wage} AED | Workplace: ${emp.workplace_name}</small>`;
          }
          li.innerHTML = content;
          list.appendChild(li);
        });
      }

      function renderWorkplaceSummary(employees) {
        const tableBody = document.querySelector(
          "#workplaceSummaryTable tbody"
        );
        tableBody.innerHTML = "";

        const workplaceMap = {};
        let totalWage = 0;

        employees.forEach((emp) => {
          if (!workplaceMap[emp.workplace_name]) {
            workplaceMap[emp.workplace_name] = {
              employees: [],
              wage: 0,
              overtimeCount: 0,
            };
          }
          workplaceMap[emp.workplace_name].employees.push(emp);
          workplaceMap[emp.workplace_name].wage += Number(emp.wage) || 0;
          totalWage += Number(emp.wage) || 0;
          if (emp.overtime) {
            workplaceMap[emp.workplace_name].overtimeCount++;
          }
        });

        document.getElementById("totalWage").innerText = totalWage;

        Object.entries(workplaceMap).forEach(([name, data]) => {
          const row = document.createElement("tr");
          row.innerHTML = `
                  <td class="text-primary text-decoration-underline" style="cursor:pointer">${name}</td>
                  <td>${data.employees.length}</td>
                  <td>${data.wage} AED</td>
                  <td>${data.overtimeCount}</td>
                `;
          row.addEventListener("click", () => {
            showEmployeeModal(name, data.employees);
          });
          tableBody.appendChild(row);
        });
      }

      function showEmployeeModal(workplaceName, employees) {
        const modalTitle = document.getElementById("employeeModalLabel");
        const list = document.getElementById("employeeDetailList");
        const overtimeCountSpan = document.getElementById("overtimeCount");

        modalTitle.innerText = `Employees at ${workplaceName}`;
        list.innerHTML = "";

        let overtimeCount = 0;
        let totalWage = 0;
        let totalBaseWage = 0;
        let totalOvertimeWage = 0;

        employees.forEach((emp) => {
          const li = document.createElement("li");
          li.className = "list-group-item";

          const baseWage = emp.base_wage || 0;
          const wage = emp.wage || 0;
          const overtime = emp.overtime && wage > baseWage;
          const overtimeWage = overtime ? wage - baseWage : 0;

          totalBaseWage += Number(baseWage);
          totalWage += Number(wage);
          totalOvertimeWage += Number(overtimeWage);
          if (overtime) overtimeCount++;

          li.innerHTML = `
            <div class="d-flex justify-content-between align-items-center">
              <div>
                <strong>${emp.name}</strong> (ID: ${emp.employee_id})<br>
                <small>
                  Base: ${baseWage} AED |
                  ${
                    overtime
                      ? `OT: <span class="text-danger fw-bold">${overtimeWage} AED</span> | `
                      : ""
                  }
                  Total: ${wage} AED
                </small>
              </div>
              ${
                overtime
                  ? '<span class="badge bg-danger">Overtime</span>'
                  : '<span class="badge bg-secondary">Normal</span>'
              }
            </div>

          `;
          list.appendChild(li);
        });

        overtimeCountSpan.innerText = overtimeCount;

        // Add total wage summary below list
        const summary = document.createElement("div");
        summary.className = "mt-4 p-3 bg-light border rounded";
        summary.innerHTML = `
          <strong>Total Summary:</strong><br>
          Base Wage: ${totalBaseWage} AED<br>
          Overtime Wage: <span class="text-danger fw-bold">${totalOvertimeWage} AED</span><br>
          Final Total Wage: ${totalWage} AED
        
      `;
        list.appendChild(summary);

        const modal = new bootstrap.Modal(
          document.getElementById("employeeModal")
        );
        modal.show();
      }
      async function downloadPDF() {
        const modalBody = document.querySelector(
          "#employeeModal .modal-content"
        );

        // Use html2canvas to capture the modal content
        const canvas = await html2canvas(modalBody, {
          scale: 2,
          useCORS: true,
        });

        const imgData = canvas.toDataURL("image/png");
        const { jsPDF } = window.jspdf;
        const pdf = new jsPDF("p", "mm", "a4");

        // Calculate image dimensions for A4 size
        const imgProps = pdf.getImageProperties(imgData);
        const pdfWidth = 210;
        const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;

        pdf.addImage(imgData, "PNG", 0, 0, pdfWidth, pdfHeight);
        pdf.save("employee-details.pdf");
      }
      fetchData();
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
  </body>
</html>
