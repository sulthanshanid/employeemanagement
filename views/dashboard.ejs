<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Admin Dashboard</title>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"
    />
    <style>
      /* Basic Reset */
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: "Arial", sans-serif;
        background-color: #f5f5f5;
        color: #333;
        padding: 20px;
      }

      h1,
      h2 {
        text-align: center;
        margin-bottom: 20px;
      }

      .container {
        max-width: 1200px;
        margin: 0 auto;
      }

      .button {
        background-color: #ea4242;
        color: white;
        border: none;
        padding: 10px 20px;
        cursor: pointer;
        font-size: 16px;
        border-radius: 5px;
        transition: background-color 0.3s ease;
      }

      .button:hover {
        background-color: #0056b3;
      }

      .button:focus {
        outline: none;
      }

      ul#employee-list {
        list-style-type: none;
        padding: 0;
      }

      ul#employee-list li {
        background-color: #fff;
        margin: 10px 0;
        padding: 15px;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      .form-container {
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        width: 400px;
        margin: 0 auto;
      }

      input[type="text"],
      input[type="number"] {
        width: 100%;
        padding: 10px;
        margin: 10px 0;
        border: 1px solid #ddd;
        border-radius: 5px;
        font-size: 16px;
      }

      button[type="submit"] {
        background-color: #28a745;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
      }

      button[type="button"] {
        background-color: #dc3545;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        margin-left: 10px;
      }

      .form-container h3 {
        margin-bottom: 20px;
        text-align: center;
      }

      /* Modal Styles */
      .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        justify-content: center;
        align-items: center;
      }

      .modal-content {
        background-color: #fff;
        padding: 30px;
        border-radius: 8px;
        width: 500px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      }

      /* Loading Animation */
      .loading {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        font-size: 24px;
        color: #333;
        display: none;
      }

      .loading.active {
        display: block;
      }

      .home-button {
        position: fixed;
        bottom: 20px;
        right: 20px;
        background-color: #17a2b8;
        color: white;
        padding: 15px 25px;
        border: none;
        border-radius: 50%;
        font-size: 24px;
        cursor: pointer;
      }

      .home-button:hover {
        background-color: #138496;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <h1>Admin Dashboard</h1>

      <h2>Employees</h2>
      <ul id="employee-list">
        <% employees.forEach(employee => { %>
        <li>
          <span
            ><strong>Name:</strong> <%= employee.name %> |
            <strong>Role:</strong> <%= employee.designation %> |
            <strong>Wage:</strong> $<%= employee.basic_wage %> |
            <strong>Status:</strong> <%= employee.status %></span
          >
          <button
            class="button"
            onclick="editEmployee(<%= employee.employee_id %>)"
          >
            Edit
          </button>
          <button
            class="button"
            onclick="deleteEmployee(<%= employee.employee_id %>)"
          >
            Delete
          </button>
        </li>
        <% }); %>
      </ul>

      <!-- Add Employee Button -->
      <button class="button" onclick="openEmployeeForm()">Add Employee</button>
    </div>

    <!-- Add Employee Modal -->
    <div id="add-employee-modal" class="modal">
      <div class="modal-content form-container">
        <h3>Add Employee</h3>
        <form action="/add-employee" method="POST">
          <input type="text" name="name" placeholder="Name" required />
          <input
            type="text"
            name="designation"
            placeholder="Designation"
            required
          />
          <input type="number" name="basic_wage" placeholder="Wage" required />
          <select name="status" required>
            <option value="working">Working</option>
            <option value="leave">On Leave</option>
            <option value="left">Left</option>
          </select>
          <button type="submit">Add Employee</button>
          <button type="button" onclick="closeEmployeeForm()">Cancel</button>
        </form>
      </div>
    </div>

    <!-- Edit Employee Modal -->
    <div id="edit-employee-modal" class="modal">
      <div class="modal-content form-container">
        <h3>Edit Employee</h3>
        <form id="edit-form" method="POST">
          <input type="hidden" name="_method" value="PUT" />
          <input
            type="text"
            name="name"
            id="edit-name"
            placeholder="Name"
            required
          />
          <input
            type="text"
            name="designation"
            id="edit-designation"
            placeholder="Designation"
            required
          />
          <input
            type="number"
            name="basic_wage"
            id="edit-wage"
            placeholder="Wage"
            required
          />
          <select name="status" id="edit-status" required>
            <option value="working">Working</option>
            <option value="leave">On Leave</option>
            <option value="left">Left</option>
          </select>
          <button type="submit">Save Changes</button>
          <button type="button" onclick="closeEditEmployeeForm()">
            Cancel
          </button>
        </form>
      </div>
    </div>

    <!-- Loading Spinner -->
    <div id="loading" class="loading">Loading...</div>

    <!-- Home Button -->
    <button class="home-button" onclick="goHome()">üè†</button>

    <script>
      // Prevent the browser's back button
      history.pushState(null, "", location.href);
      window.onpopstate = function () {
        history.pushState(null, "", location.href);
      };

      // Open Add Employee form (Popup)
      function openEmployeeForm() {
        document.getElementById("add-employee-modal").style.display = "flex";
      }

      // Close Add Employee form (Popup)
      function closeEmployeeForm() {
        document.getElementById("add-employee-modal").style.display = "none";
      }

      // Open Edit Employee form (Popup)
      function editEmployee(employeeId) {
        showLoading();
        fetch(`/get-employee/${employeeId}`)
          .then((response) => response.json())
          .then((employee) => {
            document.getElementById("edit-name").value = employee.name;
            document.getElementById("edit-designation").value =
              employee.designation;
            document.getElementById("edit-wage").value = employee.basic_wage;
            document.getElementById("edit-status").value = employee.status;

            document.getElementById(
              "edit-form"
            ).action = `/update-employee/${employeeId}`;
            document.getElementById("edit-employee-modal").style.display =
              "flex";
          })
          .catch((error) => {
            console.error("Error fetching employee data:", error);
          })
          .finally(() => hideLoading());
      }

      // Close Edit Employee form (Popup)
      function closeEditEmployeeForm() {
        document.getElementById("edit-employee-modal").style.display = "none";
      }

      // Show loading spinner
      function showLoading() {
        document.getElementById("loading").classList.add("active");
      }

      // Hide loading spinner
      function hideLoading() {
        document.getElementById("loading").classList.remove("active");
      }

      // Go to Home screen (or main page)
      function goHome() {
        window.location.href = "/ramin";
      }

      // Delete Employee
      function deleteEmployee(employeeId) {
        const confirmation = confirm(
          "Are you sure you want to delete this employee?"
        );
        if (confirmation) {
          fetch(`/delete-employee/${employeeId}`, {
            method: "DELETE",
          })
            .then(() => {
              location.reload();
            })
            .catch((error) => {
              console.error("Error deleting employee:", error);
            });
        }
      }
    </script>
  </body>
</html>
